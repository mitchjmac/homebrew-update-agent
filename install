#!/bin/bash

set -ue

# set variables
plist_location="$HOME/Library/LaunchAgents"
script_location="$HOME/bin"
brew_location="/usr/local/bin/brew"
run_time=2
OPTIND=1

# display install help
print_help () {
    echo -e 'brew-update-agent: (install)'
    echo -e ' Creates a Launch Agent plist and a bash script used to update homebrew daily'
    echo -e ' IMPORTANT NOTE: If the Launch Agent is not installed in ~/Library/LaunchAgents\n then run as: sudo ./install'
    echo ' Flags:'
    echo -e '\t-p: launch agent plist directory \t(default: ~/Library/LaunchAgents)'
    echo -e '\t    ./install -p </path/to/directory>'
    echo -e '\t    {/System/Library/LaunchAgents, /Library/LaunchAgents, ~/Library/LaunchAgents}'
    echo -e '\t-s: brew update script directory\t(default: ~/bin)'
    echo -e '\t    ./install -s </path/to/directory>'
    echo -e '\t-t: time to preform the update everyday\t(default: 2:00am)'
    echo -e '\t    ./install -t <hour>'
    echo -e '\t    hour{0-23}'
    echo -e '\t-u: uninstall the launch agent\t\t(deletes files and unloads agent)'
    echo -e '\t    ./install -u'
}

uninstall () {
    if [ -f "$HOME/Library/LaunchAgents/com.github.homebrew_update_agent.plist" ]; then
        plist_location="$HOME/Library/LaunchAgents"
    elif [ -f "/System/Library/LaunchAgents/com.github.homebrew_update_agent.plist" ]; then
        plist_location ="/System/Library/LaunchAgents"
    elif [ -f "/Library/LaunchAgents/com.github.homebrew_update_agent.plist" ]; then
        plist_location ="/Library/LaunchAgents"
    else
        echo "uninstall failed: homebrew_update_agent.plist could not be found"
        exit 1
    fi
    script_location="$(defaults read ~/Library/LaunchAgents/com.github.homebrew_update_agent.plist ProgramArguments | grep homebrew_update | sed 's/^ *//g')"
    script_location="${script_location%\"}"
    script_location="${script_location#\"}"
    launchctl unload com.github.homebrew_update_agent.plist
    rm -f "$plist_location/com.github.homebrew_update_agent.plist"
    rm -f "$script_location"
    rm -f "/tmp/com.github.homebrew_update.err"
    rm -f "/tmp/com.github.homebrew_update.out"

}

# parse arguments
while getopts "h?p:s:t:u" opt; do
    case "$opt" in
    h|\?)
        print_help
        exit 0
        ;;
    p)  plist_location="${OPTARG%/}"
        ;;
    s)  script_location="${OPTARG%/}"
        ;;
    t)  run_time="$OPTARG"
        ;;
    u)  uninstall
        exit 0
        ;;
    esac
done

# argument check
if ! [ "$plist_location" == "/System/Library/LaunchAgents" ] && \
   ! [ "$plist_location" == "/Library/LaunchAgents" ] && \
   ! [ "$plist_location" == "$HOME/Library/LaunchAgents" ]; then
    exit 1
fi
if [ "$run_time" -lt 0 ] || [ "$run_time" -gt 23 ]; then
    exit 1
fi

# create script
mkdir -p "$script_location"
cat ./homebrew_update > "$script_location/homebrew_update"
if ! [ "$(which brew)" == "$brew_location" ]; then
    sed -ie 's|'"$brew_location"'|'"$(which brew)"'|g' "$script_location/homebrew_update"
    rm -f "$script_location/homebrew_updatee"
fi
chmod +x "$script_location/homebrew_update"

# create plist
cat ./com.github.homebrew_update_agent.plist > "$plist_location/com.github.homebrew_update_agent.plist"
defaults write "$plist_location/com.github.homebrew_update_agent" ProgramArguments "('bash', '-c', $script_location/homebrew_update)"
defaults write "$plist_location/com.github.homebrew_update_agent" StartCalendarInterval -dict Hour -int "$run_time" Minute -int 0

# load and start Launch Agent
launchctl load "$plist_location/com.github.homebrew_update_agent.plist"
launchctl start com.github.homebrew_update_agent

set +ue
